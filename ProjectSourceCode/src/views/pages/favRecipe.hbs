<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Favorite Recipes</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
  <link rel="stylesheet" href="/css/style.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/choices.js/public/assets/styles/choices.min.css">
  <style>
    .favorite-recipes-container {
      display: flex;
      flex-direction: column;
      align-items: center;
      margin-top: 20px;
    }

    .recipe-list {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 20px;
      margin-top: 20px;
    }

    .recipe-card {
      background-color: #f9f9f9;
      padding: 20px;
      border-radius: 10px;
      display: flex;
      flex-direction: column;
      align-items: center;
      text-align: center;
      cursor: pointer;
    }

    .recipe-card img {
      width: 100%;
      height: auto;
      object-fit: cover;
      border-radius: 5px;
      margin-bottom: 10px;
    }

    .recipe-details-container {
      display: none;
      position: fixed;
      z-index: 1;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgba(0, 0, 0, 0.4);
    }

    .recipe-details-content {
      background-color: #fefefe;
      margin: 15% auto;
      padding: 20px;
      border: 1px solid #888;
      width: 80%;
      border-radius: 10px;
    }

    .close {
      color: #aaa;
      float: right;
      font-size: 28px;
      font-weight: bold;
      cursor: pointer;
    }
  </style>
</head>

<body>
  <div class="favorite-recipes-container">
    <h2>Favorite Recipes</h2>
    <div id="favoriteRecipesList" class="recipe-list"></div>
  </div>

  <div id="recipeDetailsContainer" class="recipe-details-container">
    <div class="recipe-details-content">
      <span class="close" onclick="closeRecipeDetails()">&times;</span>
      <div id="recipeDetailsContent"></div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

  <script>
    const favoritesContainer = document.getElementById('favoriteRecipesList');
    const recipeDetailsContainer = document.getElementById('recipeDetailsContainer');
    const recipeDetailsContent = document.getElementById('recipeDetailsContent');
    const API_KEY = '3122cef951msh40e0e89b8ce8165p1c980bjsnd1b136ffa544';

    async function getRecipeDetails(recipeId) {
      const cachedRecipe = localStorage.getItem(`recipe-${recipeId}`);
      if (cachedRecipe) {
        return JSON.parse(cachedRecipe);
      }
      const options = {
        method: 'GET',
        url: `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/${recipeId}/information`,
        headers: {
          'X-RapidAPI-Key': API_KEY,
          'X-RapidAPI-Host': 'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com'
        }
      };
      try {
        const response = await axios.request(options);
        localStorage.setItem(`recipe-${recipeId}`, JSON.stringify(response.data));
        return response.data;
      } catch (error) {
        console.error(`Failed to fetch recipe details for recipe ID ${recipeId}:`, error);
        throw error;
      }
    }

    async function fetchFavoriteRecipeDetails(recipeIds) {
      const favoriteRecipes = [];
      for (const recipeId of recipeIds) {
        if (recipeId) {
          const recipeDetails = await getRecipeDetails(recipeId);
          favoriteRecipes.push(recipeDetails);
        }
      }
      return favoriteRecipes;
    }

    async function populateFavoriteRecipes() {
      const favorites = JSON.parse(localStorage.getItem('favorites') || '[]');
      if (favorites.length === 0) {
        favoritesContainer.innerHTML = '<p>You have no favorite recipes yet.</p>';
        return;
      }
      try {
        const favoriteRecipes = await fetchFavoriteRecipeDetails(favorites);
        favoritesContainer.innerHTML = '';
        for (let i = 0; i < favoriteRecipes.length; i++) {
          const recipe = favoriteRecipes[i];
          const recipeCard = document.createElement('div');
          recipeCard.classList.add('recipe-card');
          recipeCard.innerHTML = `
            <img src="${recipe.image}" alt="${recipe.title}">
            <p>${recipe.title}</p>
          `;
          recipeCard.addEventListener('click', () => {
            displayRecipeDetails(recipe);
          });
          favoritesContainer.appendChild(recipeCard);
        }
      } catch (error) {
        console.error('Error fetching favorite recipes:', error);
        favoritesContainer.innerHTML = '<p>Failed to load favorite recipes. Please try again later.</p>';
      }
    }

    async function fetchInstructions(recipeId) {
      const options = {
        method: 'GET',
        url: `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/${recipeId}/analyzedInstructions`,
        params: { stepBreakdown: 'true' },
        headers: {
          'X-RapidAPI-Key': API_KEY,
          'X-RapidAPI-Host': 'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com'
        }
      };
      try {
        const response = await axios.request(options);
        return formatInstructions(response.data);
      } catch (error) {
        console.error(error);
        return '<p>Failed to load instructions. Please try again later.</p>';
      }
    }

    function formatInstructions(data) {
      let html = '<h3>Instructions</h3><ol>';
      data.forEach(part => {
        part.steps.forEach(step => {
          html += `<li>${step.step}</li>`;
        });
      });
      html += '</ol>';
      return html;
    }

    function formatIngredients(data) {
      let html = '<h3>Ingredients</h3><ul>';
      data.extendedIngredients.forEach(ing => {
        html += `<li>${ing.original}</li>`;
      });
      html += '</ul>';
      return html;
    }

    async function displayRecipeDetails(recipe) {
      const ingredientsHtml = formatIngredients(recipe);
      const instructionsHtml = await fetchInstructions(recipe.id);
      recipeDetailsContent.innerHTML = `
        <h2>${recipe.title}</h2>
        <img src="${recipe.image}" alt="${recipe.title}">
        ${ingredientsHtml}
        ${instructionsHtml}
      `;
      recipeDetailsContainer.style.display = 'block';
    }

    function closeRecipeDetails() {
      recipeDetailsContainer.style.display = 'none';
    }

    document.addEventListener('DOMContentLoaded', populateFavoriteRecipes);
  </script>

</body>

</html>
