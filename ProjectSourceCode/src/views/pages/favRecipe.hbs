<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Favorite Recipes</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
  <link rel="stylesheet" href="/css/style.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/choices.js/public/assets/styles/choices.min.css">
  <style>
    .favorite-recipes-container {
      display: flex;
      flex-direction: column;
      align-items: center;
      margin-top: 20px;
    }

    .recipe-list {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 20px;
      margin-top: 20px;
    }

    .recipe-card {
      background-color: #f9f9f9;
      padding: 20px;
      border-radius: 10px;
      display: flex;
      flex-direction: column;
      align-items: center;
      text-align: center;
    }

    .recipe-card img {
      width: 100%;
      height: auto;
      object-fit: cover;
      border-radius: 5px;
      margin-bottom: 10px;
    }
  </style>
</head>

<body>
  <div class="favorite-recipes-container">
    <h2>Favorite Recipes</h2>
    <div id="favoriteRecipesList" class="recipe-list"></div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/handlebars@latest/dist/handlebars.min.js"></script>




  <script defer>
    const recipeTemplate = Handlebars.compile(document.getElementById('recipeTemplate').innerHTML);
  </script>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const favoritesContainer = document.getElementById('favoriteRecipesList');
      const API_KEY = '6ca5bc8018f84f2c83a8089a81b96af2';

      async function getRecipeDetails(recipeId) {
        const cachedRecipe = localStorage.getItem(`recipe-${recipeId}`);
        if (cachedRecipe) {
          return JSON.parse(cachedRecipe);
        }
        const url = `https://api.spoonacular.com/recipes/${recipeId}/information?includeNutrition=false&apiKey=${API_KEY}`;
        try {
          const response = await axios.get(url);
          localStorage.setItem(`recipe-${recipeId}`, JSON.stringify(response.data));
          return response.data;
        } catch (error) {
          console.error(`Failed to fetch recipe details for recipe ID ${recipeId}:`, error);
          throw error;
        }
      }

      async function fetchFavoriteRecipeDetails(recipeIds) {
        const favoriteRecipes = [];
        for (const recipeId of recipeIds) {
          if (recipeId) {
            const recipeDetails = await getRecipeDetails(recipeId);
            favoriteRecipes.push(recipeDetails);
          }
        }
        return favoriteRecipes;
      }

      async function populateFavoriteRecipes() {
        const favorites = JSON.parse(localStorage.getItem('favorites') || '[]');
        console.log('Favorites:', favorites);

        if (favorites.length === 0) {
          favoritesContainer.innerHTML = '<p>You have no favorite recipes yet.</p>';
          return;
        }

        try {
          const favoriteRecipes = await fetchFavoriteRecipeDetails(favorites);
          const formattedRecipes = favoriteRecipes.map(recipe => ({
            image: recipe.image,
            title: recipe.title
          }));
          console.log('Formatted Recipes:', formattedRecipes);

          favoritesContainer.innerHTML = ''; // Clear previous content

          for (let i = 0; i < formattedRecipes.length; i++) {
            const recipe = formattedRecipes[i];

            const recipeCard = document.createElement('div');
            recipeCard.classList.add('recipe-card');

            const recipeImage = document.createElement('img');
            recipeImage.src = recipe.image;
            recipeImage.alt = recipe.title;

            const recipeTitle = document.createElement('p');
            recipeTitle.textContent = recipe.title;

            recipeCard.appendChild(recipeImage);
            recipeCard.appendChild(recipeTitle);

            favoritesContainer.appendChild(recipeCard);
          }

          console.log('After rendering:', favoritesContainer.innerHTML);
        } catch (error) {
          console.error('Error fetching favorite recipes:', error);
          favoritesContainer.innerHTML = '<p>Failed to load favorite recipes. Please try again later.</p>';
        }
      }

      populateFavoriteRecipes();
    });
  </script>

</body>

</html>
